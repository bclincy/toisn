$myColor: #f7dbcf;
$dark: rgb(29 29 29);
$light: #ffffff;
$primary: #f7dbcf;

// spacing 
$spacing-md: 16px;
$spacing-lg: 32px;

// border radius 
$borderRadius: 12px;

//header height
$headerHeight: 100px;





* {
  box-sizing: border-box;

}

/* Style the body */
body {
  font-family: Arial;
  margin: 0;
  overflow: scroll;
	--slides-per-page: 2;
	margin: 0;
	overflow: scroll;
	height: 100vh;
	font-family: 'Roboto Condensed', sans-serif;
	color: hsl(0, 0%, 100%);
	position: absolute;
top: 1em; 
right: 1em;
left: 1em;
bottom: 1em; 
}

/* Header/logo Title */
.header {
  padding: 20px;
  text-align: center;
  background: #1abc9c;
  color: rgb(212, 15, 15);
	height: 86px;
	

}



div.header img {
	float: left;
	position: relative;
	object-fit: contain;
	height: 46px;
	object-fit: contain;
	position: relative;
	padding: 1px;
}

img {
  border: 3px solid rgb(142, 186, 252);
  border-radius: 39px;
  padding: 5px;
  width: 80px;
}

img:hover {
	box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0)
}




.container {
  position: relative;
  width: 200px;
}

.image {
  display: block;
  width: 100%;
  height: auto;
}

.overlay {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  background-color: #008CBA;
  overflow: hidden;
  width: 100%;
  height: 0;
  transition: .5s ease;
}

.container:hover .overlay {
  bottom: 0;
  height: 100%;
}

a {
  white-space: nowrap; 
  color: white;
  font-size: 20px;
  position: absolute;
  overflow: hidden;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
}

/* Style the top navigation bar */
.navbar {
  display: flex;
  background-color: #333;
}

/* Style the navigation bar links */
.navbar a {
  color: white;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* Change color on hover */
.navbar a:hover {
  background-color: #ddd;
  color: black;
}

/* Column container */
.row {  
  display: flex;
  flex-wrap: wrap;
}

/* Create two unequal columns that sits next to each other */
/* Sidebar/left column */
.side {
  flex: 30%;
  background-color: #f1f1f1;
  padding: 20px;
}

/* Main column */
.main {
  flex: 70%;
  background-color: white;
  padding: 20px;
}

/* Fake image, just for this example */
.fakeimg {
  background-color: #aaa;
  width: 100%;
  padding: 20px;
}

/* Footer */
.footer {
  padding: 20px;
  text-align: center;
  background: #ddd;
}

/* Responsive layout - when the screen is less than 700px wide, make the two columns stack on top of each other instead of next to each other */
@media (max-width: 700px) {
  .row, .navbar {   
    flex-direction: column;
  }
}



@import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,400,900,800i');

$accent-color: hsl(204, 90%, 50%);
$curve: cubic-bezier(0.7, 0, 0.3, 1);



a {
	text-decoration: none;
	color: inherit;
}

#hero-slides {
	--page: 0;
	height: 100vh;
	background: hsl(210, 23%, 19%);
	background: linear-gradient(90deg, hsl(210, 13%, 28%) 0%, hsl(210, 23%, 19%) 100%);
	overflow: auto;
  overscroll-behavior-y: contain;
	
	#header1 {
		height: 12vh;
		line-height: 12vh;
		padding: 0 3vw;
		position: relative;
		
		#logo {
			font-size: 2.5vh;
			font-style: italic;
			
			&:before {
				content: 'The';
				text-transform: uppercase;
				font-weight: 100;
				margin-right: 0.4em;
			}
			&:after {
				content: 'Wall';
				text-transform: uppercase;
				font-weight: 800;
			}
		}
		#menu {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			cursor: pointer;
			padding: 0 3vw;
			
			&:before {
				font-size: 1.75vh;
				content: 'Play Demo';
				margin-right: 0.5em;
				text-transform: uppercase;
			}
			#hamburger {
				display: inline-block;
				
				.slice {
					background: hsl(0, 0%, 100%);
					height: 0.2vh;
					width: 1vw;
					
					&:not(:last-child) {
						margin-bottom: 0.5vh;
					}
				}
			}
		}
	}
	#slides-cont {
		position: relative;
		// overflow: hidden;
		--button-height: 6vh;
		--button-spacing: 0.2vh;
		
		.button {
			width: 5vw;
			height: var(--button-height);
			background: $accent-color;
			// text-align: center;
			position: absolute;
			right: 5.375vw;
			top: 38vh;
			z-index: 0;
			cursor: pointer;
			
			&:before,
			&:after {
				line-height: var(--button-height);
				position: absolute;
				margin-left: -0.25vw;
				pointer-events: none;
				transform: scale(0.75, 1.5);
				transition: 125ms ease-in-out;
			}
			&:before {
				left: 50%;
			}
			&:after {
				opacity: 0;
			}
			&:hover {
				&:before,
				&:after {
					transition: 250ms ease-in-out;
				}
				&:before {
					opacity: 0;
				}
				&:after {
					left: 50% !important;
					opacity: 1;
				}
			}
		}
		#next {
			margin-top: calc(-1 * (var(--button-height) + var(--button-spacing)));
			
			&:before,
			&:after {
				content: '>';
			}
			&:after {
				left: 30%;
			}
			&:hover:before {
				left: 70%;
			}
		}
		#prev {
			margin-top: var(--button-spacing);
			opacity: calc(var(--page) + 0.5);
			transition: 500ms opacity;
			
			&:before,
			&:after {
				content: '<';
			}
			&:after {
				left: 70%;
			}
			&:hover:before {
				left: 30%;
			}
		}
		#next-catch,
		#prev-catch {
			width: 10vw;
			height: 76vh;
			position: absolute;
			top: 0;
			z-index: 90;
		}
		#next-catch {
			right: 0;
		}
		#prev-catch {
			left: 0;
		}
	}
	#slides {
		--slides-height: 76vh;
		width: auto;
		height: var(--slides-height);
		padding: 0 10vw;
		font-size: 0;
		white-space: nowrap;
		position: absolute;
		z-index: 0;
		transform: translate3D(calc(var(--page) * -80vw), 0, 0);
		transition: 1500ms transform $curve;
		
		.slide {
			display: inline-block;
			vertical-align: top;
			font-size: 1.5vw;
			width: 24em;
			height: var(--slides-height);
			margin: 0 1.333em;
			background: hsl(210, 23%, 8%);
			color: white;
			background-size: cover;
			background-position: center;
			white-space: normal;
			word-break: break-word;
			position: relative;
			
			&:before {
				content: '';
				display: block;
				background: linear-gradient(180deg, hsla(209, 11%, 38%, 0) 0%, hsla(209, 36%, 20%, 0.7) 100%);
				opacity: 0;
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
			}
			.number {
				position: absolute;
				top: 2em;
				left: 2em;
				filter: drop-shadow(0 2px 1px hsla(0, 0%, 0%, 0.5));
				
				&,
				&:before,
				&:after {
					vertical-align: middle;
				}
				&:before,
				&:after {
					display: inline-block;
					content: '';
					height: 0.133em;
					margin-top: -0.2em;
					background: hsl(0, 0%, 100%);
				}
				&:before {
					width: 0;
					margin-left: 0;
				}
				&:after {
					width: 3em;
					margin-left: 1em;
				}
			}
			.body {
				position: absolute;
				bottom: 2em;
				left: 2em;
				right: 2em;
			}
			.location,
			.headline {
				position: relative;
				bottom: 0;
				cursor: default;
			}
			&:before,
			.number:before,
			.number:after,
			.location,
			.headline,
			.link {
				transition: 375ms $curve;
			}
			.location {
				font-weight: 100;
				margin-bottom: 1.5em;
				transition-delay: 60ms;
			}
			.headline {
				font-size: 2.667em;
				font-weight: 900;
				transition-delay: 50ms;
			}
			.link {
				display: inline-block;
				background: $accent-color;
				padding: 0.5em 1.25em;
				font-size: 1.33em;
				opacity: 0;
				position: absolute;
				bottom: -2em;
				pointer-events: none;
				transition-delay: 25ms;
			}
			&.hover,
			&:hover {
				&:before {
					opacity: 1;
				}
				&:before,
				.number:before,
				.number:after,
				.location,
				.headline,
				.link {
					transition: 500ms $curve;
				}
				.number:before {
					width: 3em;
					margin-right: 1em;
				}
				.number:after {
					width: 0;
					margin-right: 0;
				}
				.location {
					transition-delay: 0;
					bottom: 4em;
				}
				.headline {
					transition-delay: 100ms;
					bottom: 1.5em;
				}
				.link {
					bottom: 0;
					opacity: 1;
					transition-delay: 250ms;
					pointer-events: auto;
				}
			}
		}
	}
	#footer {
		height: 12vh;
		font-size: 1vh;
		
// 		#page-counter {
			
// 		}
		#dribbble {
			border-radius: 2vh;
			position: absolute;
			bottom: 4vh;
			right: 4vh;
			transition: 300ms $curve;
			padding-left: 1.5vh;
			
			&:before,
			&:after {
				vertical-align: middle;
				transition: inherit;
			}
			&:before {
				display: inline;
				content: 'View original Dribbble';
				font-size: 2vh;
				opacity: 0;
				transform: translate3D(-200px, 0, 0);
			}
			&:after {
				content: '';
				display: inline-block;
				width: 4vh;
				height: 4vh;
				margin-left: 1vh;
				background-image: url(https://alca.tv/static/u/82fde61b-28ef-4f17-976e-8f1abb5a1165.png);
				background-size: contain;
				background-position: center;
			}
			&.hover,
			&:hover {
				background: hsl(337, 78%, 61%);
				
				&:before {
					opacity: 1;
					transform: translate3D(0, 0, 0);
					transition-delay: 50ms;
				}
				&:after {
					filter: saturate(0%) contrast(200%) brightness(200%) invert(100%);
				}
			}
		}
	}
}



@media (min-width: 1200px) and (max-width: 1699px) {
	body {
		--slides-per-page: 3;
	}
	#hero-slides #slides .slide {
		font-size: 1vw;
	}
}

@media (min-width: 1700px) {
	body {
		--slide-per-age: 4;
	}
	#hero-slides #slides .slide {
		font-size: 0.75vw;
	}
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';
  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

//theme
$red:#e7482c;
$black: #292929;
$bg: #191919;
$lines: #757474;
body {
  background-color: $bg;
  font-family: 'Open Sans', sans-serif;
}

#hero-slides #slides-cont .button {

}

.text {
  opacity: 0;
  position: absolute;
  z-index: 7;
  text-align: left;
  margin: -50px 0 0 -150px;
  width: 300px;
  height: 100px;
  top: 50%;
  left: 50%;
  font-size: 48px;
  font-weight: 700;
  p {
    white-space: nowrap;
    overflow: hidden;
    width: 100%;
    @include animation('type .3s steps(60, end) 3.7s');
  }
  p:nth-child(2) {
    @include animation('type2 .5s steps(60, end) 3.7s');
  }
  @include animation('on .6s ease-in-out 3.7s forwards');
  
  button {
    border:0;
    opacity:0;
    background:$bg;
    color:$red;
    border:1px solid $bg;
    letter-spacing:2px;
    padding:.5rem 2.5rem;
    font-size:12px;
    font-weight:600;
    text-transform:uppercase;
    cursor:pointer;
    @include transition(color .5s, background-color .5s);
    @include animation('on .6s ease-in-out 4s forwards');
    &:hover {
      background:$red;
      color:$bg;
      border:1px solid $bg;
    }
  }
}

.splash {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  z-index: 1;
  &_logo {
    position: absolute;
    margin: -15px 0 0 -25px;
    top: 50vh;
    z-index: 5;
    left: 50vw;
    width: 50px;
    text-align: center;
    height: 30px;
    font-size: 26px;
    font-weight: 600;
    color: #ffffff;
    opacity: 1;
    will-change: opacity;
    @include animation('logo .0s ease-in 0s forwards, off .0s ease-in-out 0m.2s forwards');
    &:before {
      display: block;
      position: absolute;
      left: 15px;
      bottom: -5px;
      width: 20px;
      height: 1px;
      background-color: $lines;
      content: "";
    }
    &:after {
      display: block;
      position: absolute;
      left: 15px;
      top: -5px;
      width: 20px;
      height: 1px;
      background-color: $lines;
      content: "";
      will-change: width;
    }
  }
  &_svg {
    position: relative;
    margin: auto;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    bottom: 0;
    right: 0;
    svg {
      width: 100%;
      height: 100%;
      -webkit-backface-visibility: visible;
      backface-visibility: visible;
      rect {
        width: 100%;
        height: 100%;
        fill: $red;
        stroke: 0;
        -webkit-clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
        clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
        @include animation('expand .7s ease-in forwards 2.7s');
      }
    }
  }
  &_minimize {
    position: absolute;
    margin: auto;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 4;
    svg {
      width: 100%;
      height: 100%;
      -webkit-backface-visibility: visible;
      backface-visibility: visible;
      rect {
        width: 100%;
        height: 100%;
        -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
        clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
        @include animation('scale .2s ease-out forwards 1s, hide 1.3s ease-out forwards 1.2s');
      }
    }
  }
}

@include keyframes(scale) {
  100% {
    -webkit-clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
    clip-path: polygon(45vw 40vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
  }
}

@include keyframes(hide) {
  100% {
    fill: transparent;
  }
}

@include keyframes (off) {
  100% {
    opacity: 0;
  }
}

@include keyframes (on) {
  100% {
    opacity: 1;
  }
}

@include keyframes (logo) {
  100% {
    color: $black;
  }
}

@include keyframes (type) {
  0% {
    width: 0;
  }
}

@include keyframes (type2) {
  0% {
    width: 0;
  }
  50% {
    width: 0;
  }
  100% {
    width: 100;
  }
}

@include keyframes(expand) {
  0% {}
  25% {
    -webkit-clip-path: polygon(0vw 0vh, 55vw 40vh, 55vw 58vh, 45vw 58vh);
    clip-path: polygon(0vw 0vh, 55vw 40vh, 55vw 60vh, 45vw 60vh);
    fill: white;
  }
  50% {
    -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 45vw 60vh);
    clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 45vw 60vh);
    fill: $red;
  }
  75% {
    -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 0vw 100vh);
    clip-path: polygon(0vw 0vh, 100vw 0vh, 55vw 60vh, 0vw 100vh);
    fill: white;
  }
  100% {
    -webkit-clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
    clip-path: polygon(0vw 0vh, 100vw 0vh, 100vw 100vh, 0vw 100vh);
    fill: $red;
  }
}